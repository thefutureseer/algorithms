# Intuition / forethought
1. My first thoughts on how to solve this problem:

# Approach
2. My approach to solving the problem:
// 1) One common approach is to first check that the two strings have 
// the same length, and then to create a frequency table (or 
// "histogram") of the characters in each string. The algorithm then 
// compares the two frequency tables to see if they are identical. 

// 1.5) A similar approach is to check if length matches,
// sort the characters in each string and then compare the two 
// sorted strings.

// 2) A 2nd approach would be to use a hash map with the count of
// each character in the word. 

# Complexity
3 A. Time complexity:
  O(n) Time complexity.

3 B. Space complexity:

# Code
```
4 A. Data structures:

4 B. kind of algorithm:

4 C. Breaking down how to solve this algorithm: